cmake_minimum_required(VERSION 3.0.0)
cmake_policy(SET CMP0048 NEW)
PROJECT(Orangutan
  DESCRIPTION
  "Orangutan"
  LANGUAGES
  CXX
  VERSION
  "1.0.0"
  )

set(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++17 -Wall -g3")

# Generate compilation database for YouCompleteMe
set( CMAKE_EXPORT_COMPILE_COMMANDS ON )

# Make include root directory
include_directories(${PROJECT_SOURCE_DIR}/include)

# glm
set(glm_DIR ${PROJECT_SOURCE_DIR}/ext/glm)
find_package(glm REQUIRED)
set(GLM_LIBRARY glm::glm)

# nanogui
# Disable building extras we won't need (pure C++ project)
set(NANOGUI_BUILD_EXAMPLES OFF CACHE BOOL " " FORCE)
set(NANOGUI_BUILD_PYTHON  OFF CACHE BOOL " " FORCE)
set(NANOGUI_INSTALL       OFF CACHE BOOL " " FORCE)

# Add the configurations from nanogui
add_subdirectory(ext/nanogui)

# Various preprocessor definitions have been generated by NanoGUI
add_definitions(${NANOGUI_EXTRA_DEFS})

# On top of adding the path to nanogui/include, you may need extras
include_directories(${NANOGUI_EXTRA_INCS})

set_property(TARGET glfw glfw_objects nanogui PROPERTY FOLDER "dependencies")

# assimp
find_package(assimp 4.1 QUIET)
if (NOT assimp_FOUND)
    message(STATUS "Assimp not installed. Compiling from source.")
    set(ASSIMP_BUILD_ASSIMP_TOOLS OFF)
    set(ASSIMP_BUILD_TESTS OFF)
    add_subdirectory ("ext/assimp")
    set(assimp_INCLUDE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/ext/assimp/include/" "${CMAKE_CURRENT_BINARY_DIR}/ext/assimp/include/")
  endif (NOT assimp_FOUND)
include_directories( ${assimp_INCLUDE_DIR} )

find_package(STB REQUIRED)
include_directories( ${STB_INCLUDE_DIR} )

find_package(GLI REQUIRED)
include_directories( ${GLI_INCLUDE_DIR} )

set(CMAKE_CXX_LINK_EXECUTABLE "${CMAKE_CXX_LINK_EXECUTABLE} -lGL -luuid")

link_directories(
  /usr/local/lib
  /opt/local/lib
  )

set(LIBS
  ${LIBS}
  ${GLM_LIBRARY}
  nanogui
  ${NANOGUI_EXTRA_LIBS}
  assimp
  )

file (GLOB_RECURSE SRC_FILES src/*.cc)

add_executable(Orangutan ${SRC_FILES})

target_link_libraries(Orangutan ${LIBS})
